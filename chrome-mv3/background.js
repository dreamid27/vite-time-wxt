var background=function(){"use strict";var s,l;function u(r){return r==null||typeof r=="function"?{main:r}:r}const t=(l=(s=globalThis.browser)==null?void 0:s.runtime)!=null&&l.id?globalThis.browser:globalThis.chrome,c=u(()=>{console.log("Hello background!",{id:t.runtime.id}),t.webRequest.onBeforeRequest.addListener(function(r){console.log(r,"details");const n=new URL(r.url);return n.hostname==="google.com"?{redirectUrl:n.href.replace("google.com","example.org")}:{}},{urls:["<all_urls>"],types:["main_frame"]},["blocking"])});function g(){}function o(r,...n){}const i={debug:(...r)=>o(console.debug,...r),log:(...r)=>o(console.log,...r),warn:(...r)=>o(console.warn,...r),error:(...r)=>o(console.error,...r)};let e;try{e=c.main(),e instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(r){throw i.error("The background crashed on startup!"),r}return e}();
background;
